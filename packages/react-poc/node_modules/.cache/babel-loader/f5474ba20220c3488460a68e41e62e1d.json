{"ast":null,"code":"var _jsxFileName = \"/Users/michalzaduban/Desktop/Iteria/lowCode - new/lowcode/packages/react-poc/src/DevTools.js\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport { activate as activateBackend, initialize as initializeBackend } from 'react-devtools-inline/backend';\nimport { initialize as initializeFrontend } from 'react-devtools-inline/frontend';\nexport default function DevTools({\n  iframeRef,\n  tabID\n}) {\n  const [DevTools, setDevTools] = useState(null);\n  useLayoutEffect(() => {\n    const iframe = iframeRef.current; // This should be the iframe the backend hook has been installed in.\n\n    const contentWindow = iframe.contentWindow; // Helps with positioning Overlay UI.\n\n    contentWindow.__REACT_DEVTOOLS_TARGET_WINDOW__ = window;\n    initializeBackend(contentWindow); // Reset preferences between tutorial steps.\n\n    localStorage.removeItem('React::DevTools::componentFilters'); // This returns a React component that can be rendered into your app.\n    // <DevTools {...props} />\n\n    const DevTools = initializeFrontend(contentWindow); // Schedule an update with React now that the DevTools UI is ready to be rendered.\n\n    setDevTools(DevTools); // Let the backend know it's safe to activate.\n\n    activateBackend(contentWindow);\n  }, [iframeRef]);\n  return DevTools !== null && /*#__PURE__*/React.createElement(DevTools, {\n    overrideTab: tabID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }\n  });\n}","map":{"version":3,"sources":["/Users/michalzaduban/Desktop/Iteria/lowCode - new/lowcode/packages/react-poc/src/DevTools.js"],"names":["React","useLayoutEffect","useState","activate","activateBackend","initialize","initializeBackend","initializeFrontend","DevTools","iframeRef","tabID","setDevTools","iframe","current","contentWindow","__REACT_DEVTOOLS_TARGET_WINDOW__","window","localStorage","removeItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SACEC,QAAQ,IAAIC,eADd,EAEEC,UAAU,IAAIC,iBAFhB,QAGO,+BAHP;AAIA,SAASD,UAAU,IAAIE,kBAAvB,QAAiD,gCAAjD;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAlB,EAAwC;AACrD,QAAM,CAACF,QAAD,EAAWG,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMW,MAAM,GAAGH,SAAS,CAACI,OAAzB,CADoB,CAGpB;;AACA,UAAMC,aAAa,GAAGF,MAAM,CAACE,aAA7B,CAJoB,CAMpB;;AACAA,IAAAA,aAAa,CAACC,gCAAd,GAAiDC,MAAjD;AAEAV,IAAAA,iBAAiB,CAACQ,aAAD,CAAjB,CAToB,CAWpB;;AACAG,IAAAA,YAAY,CAACC,UAAb,CAAwB,mCAAxB,EAZoB,CAcpB;AACA;;AACA,UAAMV,QAAQ,GAAGD,kBAAkB,CAACO,aAAD,CAAnC,CAhBoB,CAkBpB;;AACAH,IAAAA,WAAW,CAACH,QAAD,CAAX,CAnBoB,CAqBpB;;AACAJ,IAAAA,eAAe,CAACU,aAAD,CAAf;AACD,GAvBc,EAuBZ,CAACL,SAAD,CAvBY,CAAf;AAyBA,SAAOD,QAAQ,KAAK,IAAb,iBAAqB,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAEE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B;AACD","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\nimport {\n  activate as activateBackend,\n  initialize as initializeBackend,\n} from 'react-devtools-inline/backend';\nimport { initialize as initializeFrontend } from 'react-devtools-inline/frontend';\n\nexport default function DevTools({ iframeRef, tabID }) {\n  const [DevTools, setDevTools] = useState(null);\n\n  useLayoutEffect(() => {\n    const iframe = iframeRef.current;\n\n    // This should be the iframe the backend hook has been installed in.\n    const contentWindow = iframe.contentWindow;\n\n    // Helps with positioning Overlay UI.\n    contentWindow.__REACT_DEVTOOLS_TARGET_WINDOW__ = window;\n\n    initializeBackend(contentWindow);\n\n    // Reset preferences between tutorial steps.\n    localStorage.removeItem('React::DevTools::componentFilters');\n\n    // This returns a React component that can be rendered into your app.\n    // <DevTools {...props} />\n    const DevTools = initializeFrontend(contentWindow);\n\n    // Schedule an update with React now that the DevTools UI is ready to be rendered.\n    setDevTools(DevTools);\n\n    // Let the backend know it's safe to activate.\n    activateBackend(contentWindow);\n  }, [iframeRef]);\n\n  return DevTools !== null && <DevTools overrideTab={tabID} />;\n}\n"]},"metadata":{},"sourceType":"module"}