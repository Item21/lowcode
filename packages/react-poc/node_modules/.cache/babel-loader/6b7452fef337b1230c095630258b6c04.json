{"ast":null,"code":"import { useMemo } from 'react';\nimport { useSubscription } from 'use-subscription';\nimport { globalHistory } from '@reach/router';\nimport ROUTES from './routes';\nexport function useLocation() {\n  const subscription = useMemo(() => ({\n    getCurrentValue: () => globalHistory.location,\n    subscribe: callback => globalHistory.listen(callback)\n  }), []);\n  return useSubscription(subscription);\n}\nexport function usePrevAndNextRoutes() {\n  const {\n    pathname\n  } = useLocation();\n  const routesArray = useMemo(() => Object.keys(ROUTES), []);\n  const routeIndex = useMemo(() => routesArray.indexOf(pathname), [pathname, routesArray]);\n  let nextLink = routeIndex >= 0 && routeIndex < routesArray.length - 1 ? routesArray[routeIndex + 1] : null;\n  let prevLink = routeIndex > 0 ? routesArray[routeIndex - 1] : null;\n  return useMemo(() => ({\n    nextLink,\n    prevLink\n  }), [nextLink, prevLink]);\n}","map":{"version":3,"sources":["/Users/michalzaduban/Desktop/Iteria/lowCode - new/lowcode/packages/react-poc/src/hooks.js"],"names":["useMemo","useSubscription","globalHistory","ROUTES","useLocation","subscription","getCurrentValue","location","subscribe","callback","listen","usePrevAndNextRoutes","pathname","routesArray","Object","keys","routeIndex","indexOf","nextLink","length","prevLink"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC5B,QAAMC,YAAY,GAAGL,OAAO,CAC1B,OAAO;AACLM,IAAAA,eAAe,EAAE,MAAMJ,aAAa,CAACK,QADhC;AAELC,IAAAA,SAAS,EAAEC,QAAQ,IAAIP,aAAa,CAACQ,MAAd,CAAqBD,QAArB;AAFlB,GAAP,CAD0B,EAK1B,EAL0B,CAA5B;AAQA,SAAOR,eAAe,CAACI,YAAD,CAAtB;AACD;AAED,OAAO,SAASM,oBAAT,GAAgC;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAeR,WAAW,EAAhC;AAEA,QAAMS,WAAW,GAAGb,OAAO,CAAC,MAAMc,MAAM,CAACC,IAAP,CAAYZ,MAAZ,CAAP,EAA4B,EAA5B,CAA3B;AACA,QAAMa,UAAU,GAAGhB,OAAO,CAAC,MAAMa,WAAW,CAACI,OAAZ,CAAoBL,QAApB,CAAP,EAAsC,CAC9DA,QAD8D,EAE9DC,WAF8D,CAAtC,CAA1B;AAKA,MAAIK,QAAQ,GACVF,UAAU,IAAI,CAAd,IAAmBA,UAAU,GAAGH,WAAW,CAACM,MAAZ,GAAqB,CAArD,GACIN,WAAW,CAACG,UAAU,GAAG,CAAd,CADf,GAEI,IAHN;AAIA,MAAII,QAAQ,GAAGJ,UAAU,GAAG,CAAb,GAAiBH,WAAW,CAACG,UAAU,GAAG,CAAd,CAA5B,GAA+C,IAA9D;AAEA,SAAOhB,OAAO,CAAC,OAAO;AAAEkB,IAAAA,QAAF;AAAYE,IAAAA;AAAZ,GAAP,CAAD,EAAiC,CAACF,QAAD,EAAWE,QAAX,CAAjC,CAAd;AACD","sourcesContent":["import { useMemo } from 'react';\nimport { useSubscription } from 'use-subscription';\nimport { globalHistory } from '@reach/router';\nimport ROUTES from './routes';\n\nexport function useLocation() {\n  const subscription = useMemo(\n    () => ({\n      getCurrentValue: () => globalHistory.location,\n      subscribe: callback => globalHistory.listen(callback),\n    }),\n    []\n  );\n\n  return useSubscription(subscription);\n}\n\nexport function usePrevAndNextRoutes() {\n  const { pathname } = useLocation();\n\n  const routesArray = useMemo(() => Object.keys(ROUTES), []);\n  const routeIndex = useMemo(() => routesArray.indexOf(pathname), [\n    pathname,\n    routesArray,\n  ]);\n\n  let nextLink =\n    routeIndex >= 0 && routeIndex < routesArray.length - 1\n      ? routesArray[routeIndex + 1]\n      : null;\n  let prevLink = routeIndex > 0 ? routesArray[routeIndex - 1] : null;\n\n  return useMemo(() => ({ nextLink, prevLink }), [nextLink, prevLink]);\n}\n"]},"metadata":{},"sourceType":"module"}