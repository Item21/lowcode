{"ast":null,"code":"var _jsxFileName = \"/Users/michalzaduban/Desktop/Iteria/lowCode - new/lowcode/packages/react-poc/src/content/Profiling.js\";\nimport React from 'react';\nimport App from '../App';\nimport Icon from '../Icon';\nexport default function Content() {\n  return /*#__PURE__*/React.createElement(App, {\n    title: Content.title,\n    defaultTabID: \"profiler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"The DevTools profiler is a powerful tool for performance tuning React components. It helps identify parts of an application that are slow and may benefit from optimizations such as memoization.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Let's use the profiler to see what happens when we add a new todo list item.\"), /*#__PURE__*/React.createElement(\"details\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"summary\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Show me how.\"), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Click the \", /*#__PURE__*/React.createElement(Icon, {\n    type: \"record\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  }), \" record button to start profiling.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Type something in the input up top and click the \", /*#__PURE__*/React.createElement(Icon, {\n    type: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 62\n    }\n  }), ' ', \"add button.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Click the \", /*#__PURE__*/React.createElement(Icon, {\n    type: \"record\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }), \" record button to stop profiling.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"DevTools should now display data for each time React updated while you were profiling.\"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Using the newly recorded profiling data, let's see how many times the\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"List\"), \" component updated.\"), /*#__PURE__*/React.createElement(\"details\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"summary\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Show me how.\"), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Click on the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 26\n    }\n  }, \"List\"), \" component in the flame graph to select it.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"In the right-hand panel, under \\\"rendered at\\\", you should see one entry.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Click that entry to jump to that specific update.\"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"The profiler is a very powerful tool. To learn more about it, check out the\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"profiler documentation on reactjs.org\"), \".\"));\n}\nContent.title = 'Profiling';","map":{"version":3,"sources":["/Users/michalzaduban/Desktop/Iteria/lowCode - new/lowcode/packages/react-poc/src/content/Profiling.js"],"names":["React","App","Icon","Content","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,sBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEA,OAAO,CAACC,KAApB;AAA2B,IAAA,YAAY,EAAC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFANF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACY,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,uCADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEACmD,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnD,EACuE,GADvE,gBAJF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACY,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,sCARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAXF,CAFF,CAVF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EACwE,GADxE,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,wBA7BF,eAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADf,gDADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDATF,CAFF,CAjCF,eA+CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFAEM,GAFN,eAGE;AAAG,IAAA,IAAI,EAAC,yEAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAHF,MA/CF,CADF;AA0DD;AAEDD,OAAO,CAACC,KAAR,GAAgB,WAAhB","sourcesContent":["import React from 'react';\nimport App from '../App';\nimport Icon from '../Icon';\n\nexport default function Content() {\n  return (\n    <App title={Content.title} defaultTabID=\"profiler\">\n      <p>\n        The DevTools profiler is a powerful tool for performance tuning React\n        components. It helps identify parts of an application that are slow and\n        may benefit from optimizations such as memoization.\n      </p>\n      <p>\n        Let's use the profiler to see what happens when we add a new todo list\n        item.\n      </p>\n      <details>\n        <summary>Show me how.</summary>\n        <ol>\n          <li>\n            Click the <Icon type=\"record\" /> record button to start profiling.\n          </li>\n          <li>\n            Type something in the input up top and click the <Icon type=\"add\" />{' '}\n            add button.\n          </li>\n          <li>\n            Click the <Icon type=\"record\" /> record button to stop profiling.\n          </li>\n          <li>\n            DevTools should now display data for each time React updated while\n            you were profiling.\n          </li>\n        </ol>\n      </details>\n      <p>\n        Using the newly recorded profiling data, let's see how many times the{' '}\n        <code>List</code> component updated.\n      </p>\n      <details>\n        <summary>Show me how.</summary>\n        <ol>\n          <li>\n            Click on the <code>List</code> component in the flame graph to\n            select it.\n          </li>\n          <li>\n            In the right-hand panel, under \"rendered at\", you should see one\n            entry.\n          </li>\n          <li>Click that entry to jump to that specific update.</li>\n        </ol>\n      </details>\n      <p>\n        The profiler is a very powerful tool. To learn more about it, check out\n        the{' '}\n        <a href=\"https://reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html\">\n          profiler documentation on reactjs.org\n        </a>\n        .\n      </p>\n    </App>\n  );\n}\n\nContent.title = 'Profiling';\n"]},"metadata":{},"sourceType":"module"}